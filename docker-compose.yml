services:
  client:
    build:
      context: ./Client
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
    depends_on:
      - server
    networks:
      - my-network
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1024M

  server:
    build: ./server
    env_file:
      - server/.env
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - my-network
    environment:
      IN_DOCKER: "true"
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1024M

  db:
    image: postgres:17
    restart: unless-stopped
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "admin"
      POSTGRES_DB: "Filestorix"
    ports:
      - "5433:5432"
    networks:
      - my-network
    command: ["postgres", "-c", "listen_addresses=*"]
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1024M
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d Filestorix"]
      interval: 5s
      retries: 5
      start_period: 10s

networks:
  my-network:

volumes:
  postgres-data:
